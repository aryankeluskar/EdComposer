!function () { "use strict"; const e = document, t = e.body, n = document.querySelectorAll("a, button, input, select, textarea, .form-switch"); function s(e) { const t = e ? "" : "none"; n.forEach(e => { e.style.setProperty("outline", t) }) } function i() { n.length > 0 && (s(!1), window.addEventListener("keydown", a)), window.removeEventListener("mousedown", i) } function a(e) { 9 === e.keyCode && (s(!0), window.removeEventListener("keydown", a), window.addEventListener("mousedown", i)) } window.addEventListener("mousedown", i); const o = e.querySelector(".hamburger"), d = e.getElementById("mobile-nav"); o && (o.addEventListener("click", function () { d.style.maxHeight ? (d.classList.remove("opacity-100"), d.classList.add("opacity-0"), d.style.maxHeight = null) : (d.classList.remove("opacity-0"), d.classList.add("opacity-100"), d.style.maxHeight = d.scrollHeight + "px"), this.classList.toggle("active"), "true" === this.getAttribute("aria-expanded") ? this.setAttribute("aria-expanded", "false") : this.setAttribute("aria-expanded", "true") }), e.addEventListener("click", function (e) { e.target !== d && e.target !== o && (d.classList.remove("opacity-0"), d.classList.add("opacity-100"), d.style.maxHeight = null, o.setAttribute("aria-expanded", "false"), o.classList.remove("active")) })), document.querySelectorAll(".js-dropdown-trigger").forEach(e => { const t = e.getAttribute("aria-controls"), n = document.getElementById(t); n && (e.addEventListener("click", function () { n.classList.toggle("hidden"), "true" === this.getAttribute("aria-expanded") ? this.setAttribute("aria-expanded", "false") : this.setAttribute("aria-expanded", "true") }), document.addEventListener("click", function (t) { (!e.contains(t.target) && !n.contains(t.target) || t.target.classList.contains("js-dropdown-close")) && (n.classList.add("hidden"), e.setAttribute("aria-expanded", "false")) })) }); const r = e.querySelectorAll(".tooltip-trigger"); if (r.length > 0) for (let t = 0; t < r.length; t++) { const n = r[t]; n.addEventListener("click", function () { n.nextElementSibling.classList.toggle("hidden"), "true" === this.getAttribute("aria-expanded") ? this.setAttribute("aria-expanded", "false") : this.setAttribute("aria-expanded", "true") }), e.addEventListener("click", function (e) { e.target !== n.firstChild && e.target !== n && (n.nextElementSibling.classList.add("hidden"), n.setAttribute("aria-expanded", "false")) }) } const c = document.getElementsByClassName("accordion-header"); function l(e, t, n) { e.setAttribute("aria-expanded", !0), t.classList.add("is-open"), n.style.maxHeight = n.scrollHeight + "px" } function u(e, t, n) { e.setAttribute("aria-expanded", !1), t.classList.remove("is-open"), n.style.maxHeight = null } if (c.length > 0) for (let e = 0; e < c.length; e++) { const t = c[e], n = t.parentNode, s = t.nextElementSibling; n.classList.contains("is-open") && l(t, n, s), t.addEventListener("click", function () { n.classList.contains("is-open") ? u(t, n, s) : l(t, n, s) }) } const m = document.getElementsByClassName("modal"), g = document.getElementsByClassName("modal-trigger"); let f; function h(e, t) { if (t) { if (document.body.classList.add("overflow-hidden"), t.classList.remove("hidden"), e.target.classList.contains("modal-ext")) { const n = t.querySelector("#countdown-string"); let s = 7; const i = function () { n.innerHTML = s, f = setTimeout(function () { 0 === --s ? (window.location.href = e.target.href, p()) : i() }, 1e3) }; n && i() } const n = t.querySelector(".video-modal"); if (null != n) { const e = n.getAttribute("data-video"); n.src = e } } } function p() { e.body.classList.remove("overflow-hidden"); for (let e = 0; e < m.length; e++) { m[e].classList.add("hidden"); const t = m[e].querySelector(".video-modal"); f && clearTimeout(f), null != t && (t.src = "") } } if (m.length > 0 && g.length > 0) for (let t = 0; t < g.length; t++) { let n = g[t], s = e.getElementById(n.getAttribute("aria-controls")); s && n.addEventListener("click", function (e) { !this.classList.contains("no-prevent") && e.preventDefault(), n.hasAttribute("aria-controls") && h(e, s) }) } function v(e) { return e.getBoundingClientRect().left } function y(e) { return e.getBoundingClientRect().top + window.scrollY } function b(e) { return e.getBoundingClientRect().bottom + window.scrollY } function L(e) { let t = e.previousSibling; for (; t;) { if (1 === t.nodeType && (e.style.marginTop = 0, v(t) === v(e))) { e.style.marginTop = -(y(e) - b(t) - 24) + "px"; break } t = t.previousSibling } } if (e.addEventListener("click", function (e) { (e.target.classList.contains("modal-backdrop") || e.target.classList.contains("modal-close-trigger")) && (e.preventDefault(), p()) }), e.addEventListener("keydown", function (e) { "Escape" === e.key && p() }), e.querySelector(".testimonials")) { const t = e.querySelectorAll(".testimonial"); window.addEventListener("load", function () { for (let e = 0; e < t.length; e++)L(t[e]) }), window.addEventListener("resize", function () { for (let e = 0; e < t.length; e++)L(t[e]) }) } e.getElementById("template-pages-more-trigger") && e.getElementById("template-pages-more-trigger").addEventListener("click", function () { e.getElementById("template-pages-more").remove(), e.getElementById("template-pages").style.removeProperty("height") }); const E = document.getElementsByClassName("mosaic-vers-switcher"), w = document.getElementsByClassName("mosaic-vers-image"); if (E.length > 0) for (let e = 0; e < E.length; e++) { const t = E[e], n = t.getAttribute("data-vers"); t.addEventListener("click", function () { const e = document.getElementById(n); for (let e = 0; e < E.length; e++)E[e].classList.add("opacity-50"); for (let e = 0; e < w.length; e++)w[e].classList.add("hidden"); this.classList.remove("opacity-50"), e.classList.remove("hidden") }) } const x = e.getElementById("mosaic-theme-light-btn"), C = e.getElementById("mosaic-theme-dark-btn"); x && C && (x.addEventListener("click", function () { t.classList.remove("mosaic-theme-dark") }), C.addEventListener("click", function () { t.classList.add("mosaic-theme-dark") })), document.addEventListener("DOMContentLoaded", function () { const e = document.querySelector("#toc-nav"); if (null === e) return; const t = e.querySelector("ul"), n = document.querySelectorAll(".single-post article h2[id]"); let s = ""; n.forEach(e => { s += `<li><a class="toc-link" href="#${e.id}">${e.innerHTML}</a></li>` }), t.innerHTML = s; const i = document.querySelectorAll(".toc-link"); if (i.length < 1) return; const a = e => { (i[e] ? i[e] : i[0]).classList.add("scrollspy-active") }, o = () => [...Array(n.length).keys()].forEach(e => (e => { i[e].classList.remove("scrollspy-active") })(e)); let d = 0; a(0), window.addEventListener("scroll", () => { const e = n.length - [...n].reverse().findIndex(e => window.scrollY >= e.offsetTop - 100) - 1; e !== d && (o(), d = e, a(e)) }) }, !1) }(), function (e) { e(document).ready(function () { e(".subscribe-form").on("submit", function (t) { t.preventDefault(); var n = cruip_js_vars.ajax_url, s = e(this).find("button"), i = s.closest(".subscribe-form"); e(".subscribe-msg").addClass("hidden"), i.find("#newsletter").prop("disabled", !0); var a = { action: "cruip_subscribe_user", post_id: s.data("post_id"), nonce: s.data("nonce"), email: i.find(".subscribe-email").val() }; e.post(n, a, function (e) { !0 === e.success ? i.find(".subscribe-success").removeClass("hidden").html(e.data) : i.find(".subscribe-error").removeClass("hidden").html(e.data), i.find("#newsletter").prop("disabled", !1) }) }) }) }(jQuery), function (e) { e(document).ready(function () { e(".account-subscribe-toggle").on("change", function () { var t = cruip_js_vars.ajax_url, n = e(this), s = e(this).parent().prev(".account-toggle-feed"); s.addClass("hidden"), n.addClass("is-loading").prop("disabled", !0); var i = { action: "cruip_account_subscribe", post_id: n.data("post_id"), list: n.data("list"), nonce: n.data("nonce") }; e.post(t, i, function (e) { !0 === e.success ? (s.removeClass("hidden").html(e.data), setTimeout(function () { s.addClass("hidden") }, 1e3)) : s.removeClass("hidden").html(e.data), n.removeClass("is-loading").prop("disabled", !1) }) }) }) }(jQuery), function (e) { e(document).ready(function () { e("#threshold").on("change", function () { var t = cruip_js_vars.ajax_url, n = e(this), s = e(this).next(".threshold-feed"); s.addClass("hidden"), n.prop("disabled", !0); var i = { action: "cruip_affiliate_threshold_change", post_id: n.data("post_id"), threshold: n.val(), nonce: n.data("nonce") }; e.post(t, i, function (e) { !0 === e.success ? (s.removeClass("hidden").html(e.data), setTimeout(function () { s.addClass("hidden") }, 1e3)) : s.removeClass("hidden").html(e.data), n.prop("disabled", !1) }) }) }) }(jQuery), function (e) { e(document).ready(function () { e("body").is(".docs-page") && (e("#docs-nav-toggle").on("click", function () { e("#docs-nav").toggleClass("hidden"), e(this).find("rect").toggleClass("rotate-180") }), e(".docs-framework-nav .menu-item").on("click", "a", function (t) { var n = e(this); "#" === n.attr("href") && (t.preventDefault(), n.next().length > 0 && (n.next().is(":visible") ? n.parent().addClass("collapsed").removeClass("expanded") : n.parent().removeClass("collapsed").addClass("expanded"))) }), e(".sub-menu .menu-item a").each(function () { var t = e(this); "#" === t.attr("href") && t.css({ "text-decoration": "none", "pointer-events": "none" }).attr("tabindex", "-1") }), e("body").is(".docs-intro") && e(".docs-framework-nav .menu > .menu-item:first-child").addClass("expanded")) }) }(jQuery);